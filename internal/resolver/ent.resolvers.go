package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"
	"fmt"

	"github.com/rustic-beans/spotify-viewer/ent"
	"github.com/rustic-beans/spotify-viewer/generated"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id string) (ent.Noder, error) {
	panic(fmt.Errorf("not implemented: Node - node"))
}

// Nodes is the resolver for the nodes field.
func (r *queryResolver) Nodes(ctx context.Context, ids []string) ([]ent.Noder, error) {
	panic(fmt.Errorf("not implemented: Nodes - nodes"))
}

// Albums is the resolver for the albums field.
func (r *queryResolver) Albums(ctx context.Context) ([]*ent.Album, error) {
	return r.SharedService.GetAlbums(ctx)
}

// Artists is the resolver for the artists field.
func (r *queryResolver) Artists(ctx context.Context) ([]*ent.Artist, error) {
	panic(fmt.Errorf("not implemented: Artists - artists"))
}

// Images is the resolver for the images field.
func (r *queryResolver) Images(ctx context.Context) ([]*ent.Image, error) {
	return r.SharedService.GetImages(ctx)
}

// Tracks is the resolver for the tracks field.
func (r *queryResolver) Tracks(ctx context.Context) ([]*ent.Track, error) {
	return r.SharedService.GetTracks(ctx)
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
