// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
)

func (a *Album) Images(ctx context.Context) (result []*Image, err error) {
	if fc := graphql.GetFieldContext(ctx); fc != nil && fc.Field.Alias != "" {
		result, err = a.NamedImages(graphql.GetFieldContext(ctx).Field.Alias)
	} else {
		result, err = a.Edges.ImagesOrErr()
	}
	if IsNotLoaded(err) {
		result, err = a.QueryImages().All(ctx)
	}
	return result, err
}

func (a *Album) Tracks(ctx context.Context) (result []*Track, err error) {
	if fc := graphql.GetFieldContext(ctx); fc != nil && fc.Field.Alias != "" {
		result, err = a.NamedTracks(graphql.GetFieldContext(ctx).Field.Alias)
	} else {
		result, err = a.Edges.TracksOrErr()
	}
	if IsNotLoaded(err) {
		result, err = a.QueryTracks().All(ctx)
	}
	return result, err
}

func (i *Image) Albums(ctx context.Context) (result []*Album, err error) {
	if fc := graphql.GetFieldContext(ctx); fc != nil && fc.Field.Alias != "" {
		result, err = i.NamedAlbums(graphql.GetFieldContext(ctx).Field.Alias)
	} else {
		result, err = i.Edges.AlbumsOrErr()
	}
	if IsNotLoaded(err) {
		result, err = i.QueryAlbums().All(ctx)
	}
	return result, err
}

func (t *Track) Albums(ctx context.Context) (*Album, error) {
	result, err := t.Edges.AlbumsOrErr()
	if IsNotLoaded(err) {
		result, err = t.QueryAlbums().Only(ctx)
	}
	return result, MaskNotFound(err)
}
